# -*- coding: utf-8 -*-
"""CF Lab 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nwklLzfTO5kMklewOHOfUeOCjkNQjjqH
"""

import matplotlib.pyplot as plt
import numpy as np
import random

mu1=0.15
mu2=0.2
sigma1=0.25
sigma2=0.3
cc=[-1, -0.8, -0.4, 0, 0.4, 0.8, 1]

# w=random.random()
# print(w)
def generate_random_weights():
    weights=[]
    for i in range(100):
        weights.append(random.random())
    # print(weights)
    # print(weights[0])
    return weights

def muv(w):
    muv=w*mu1+(1-w)*mu2
    return muv
def sigmav(w, cc):
    sigmav=(w**2*sigma1**2+(1-w)**2*sigma2**2+2*w*(1-w)*sigma1*sigma2*cc)**1/2
    return sigmav

def calculate_muv_sigmav(weights, cc):
    muv_cc=[]
    sigmav_cc=[]
    for j in range(len(weights)):
        mu=muv(weights[j])
        muv_cc.append(mu)
        sigma=sigmav(weights[j], cc)
        sigmav_cc.append(sigma)
    return muv_cc, sigmav_cc

w=generate_random_weights()

# cc=-1
c=cc[0]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)

# cc=-0.8
c=cc[1]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)

# cc=-0.4
c=cc[2]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)

# cc=0
c=cc[3]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)

# cc=0.4
c=cc[4]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)

## cc=0.8
c=cc[5]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)

# cc=1
c=cc[6]
m, c=calculate_muv_sigmav(w, c)
x_points=np.array(m)
y_points=np.array(c)
plt.plot(x_points, y_points)



w=generate_random_weights()
all_muv=[]
all_sigmav=[]
for k in range(len(cc)):
    x, y=calculate_muv_sigmav(w, cc[k])
    all_muv.append(x)
    all_sigmav.append(y)